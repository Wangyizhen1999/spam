<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrbuedu.cn.dao.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.hrbuedu.cn.model.sysUser.Member">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="ct" jdbcType="TIMESTAMP" property="ct" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="mail_num" jdbcType="INTEGER" property="mailNum" />
    <result column="problem" jdbcType="VARCHAR" property="problem" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.hrbuedu.cn.model.sysUser.Member">
    <result column="img" jdbcType="LONGVARBINARY" property="img" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, name, gender, phone, password, ct, mailbox, mail_num, problem, answer, 
    status
  </sql>
  <sql id="Blob_Column_List">
    img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.hrbuedu.cn.model.sysUser.MemberExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.hrbuedu.cn.model.sysUser.MemberExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from member
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from member
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.hrbuedu.cn.model.sysUser.MemberExample">
    delete from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    insert into member (id, account, name, 
      gender, phone, password, 
      ct, mailbox, mail_num, 
      problem, answer, status, 
      img)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{ct,jdbcType=TIMESTAMP}, #{mailbox,jdbcType=VARCHAR}, #{mailNum,jdbcType=INTEGER}, 
      #{problem,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{img,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="ct != null">
        ct,
      </if>
      <if test="mailbox != null">
        mailbox,
      </if>
      <if test="mailNum != null">
        mail_num,
      </if>
      <if test="problem != null">
        problem,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="img != null">
        img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="ct != null">
        #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="mailNum != null">
        #{mailNum,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        #{problem,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="img != null">
        #{img,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hrbuedu.cn.model.sysUser.MemberExample" resultType="java.lang.Long">
    select count(*) from member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.ct != null">
        ct = #{record.ct,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mailbox != null">
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.mailNum != null">
        mail_num = #{record.mailNum,jdbcType=INTEGER},
      </if>
      <if test="record.problem != null">
        problem = #{record.problem,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.img != null">
        img = #{record.img,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update member
    set id = #{record.id,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      ct = #{record.ct,jdbcType=TIMESTAMP},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      mail_num = #{record.mailNum,jdbcType=INTEGER},
      problem = #{record.problem,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      img = #{record.img,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update member
    set id = #{record.id,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      ct = #{record.ct,jdbcType=TIMESTAMP},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      mail_num = #{record.mailNum,jdbcType=INTEGER},
      problem = #{record.problem,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByProblem" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    update member
    set password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
    and answer = #{answer,jdbcType=VARCHAR}
  </update>
  <update id="updateByMember" parameterType="com.hrbuedu.cn.model.sysUser.Member">
  	 update member
  	 set img = #{img}, gender = #{gender}, name = #{name}, mailbox = #{mailbox}
  	 where id = #{id}
  </update>
  <update id="updateByNum" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    update `member`
    set mail_num = #{mailNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    update member
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="ct != null">
        ct = #{ct,jdbcType=TIMESTAMP},
      </if>
      <if test="mailbox != null">
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="mailNum != null">
        mail_num = #{mailNum,jdbcType=INTEGER},
      </if>
      <if test="problem != null">
        problem = #{problem,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="img != null">
        img = #{img,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    update member
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      ct = #{ct,jdbcType=TIMESTAMP},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      mail_num = #{mailNum,jdbcType=INTEGER},
      problem = #{problem,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      img = #{img,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrbuedu.cn.model.sysUser.Member">
    update member
    set account = #{account,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      ct = #{ct,jdbcType=TIMESTAMP},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      mail_num = #{mailNum,jdbcType=INTEGER},
      problem = #{problem,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>